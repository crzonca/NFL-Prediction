Best parameters set found on development set:
0.72434 (+/-0.091) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 51, 'p': 2, 'weights': 'distance'}

Grid scores on development set:
0.72434 (+/-0.091) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 51, 'p': 2, 'weights': 'distance'}
0.72434 (+/-0.091) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 51, 'p': 2, 'weights': 'distance'}
0.72434 (+/-0.091) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 51, 'p': 2, 'weights': 'distance'}
0.72395 (+/-0.096) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 65, 'p': 2, 'weights': 'distance'}
0.72395 (+/-0.096) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 65, 'p': 2, 'weights': 'distance'}
0.72395 (+/-0.096) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 65, 'p': 2, 'weights': 'distance'}
0.72357 (+/-0.094) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 59, 'p': 2, 'weights': 'distance'}
0.72357 (+/-0.094) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 59, 'p': 2, 'weights': 'distance'}
0.72357 (+/-0.094) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 59, 'p': 2, 'weights': 'distance'}
0.72338 (+/-0.092) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 53, 'p': 2, 'weights': 'distance'}
0.72338 (+/-0.098) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 61, 'p': 2, 'weights': 'distance'}
0.72338 (+/-0.092) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 53, 'p': 2, 'weights': 'distance'}
0.72338 (+/-0.098) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 61, 'p': 2, 'weights': 'distance'}
0.72338 (+/-0.092) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 53, 'p': 2, 'weights': 'distance'}
0.72338 (+/-0.098) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 61, 'p': 2, 'weights': 'distance'}
0.72318 (+/-0.099) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 63, 'p': 2, 'weights': 'distance'}
0.72318 (+/-0.099) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 63, 'p': 2, 'weights': 'distance'}
0.72318 (+/-0.099) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 63, 'p': 2, 'weights': 'distance'}
0.72280 (+/-0.090) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 50, 'p': 2, 'weights': 'distance'}
0.72280 (+/-0.093) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 54, 'p': 2, 'weights': 'distance'}
0.72280 (+/-0.090) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 50, 'p': 2, 'weights': 'distance'}
0.72280 (+/-0.090) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 50, 'p': 2, 'weights': 'distance'}
0.72280 (+/-0.093) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 54, 'p': 2, 'weights': 'distance'}
0.72261 (+/-0.097) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 58, 'p': 2, 'weights': 'distance'}
0.72261 (+/-0.094) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 54, 'p': 2, 'weights': 'distance'}
0.72261 (+/-0.097) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 58, 'p': 2, 'weights': 'distance'}
0.72261 (+/-0.097) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 58, 'p': 2, 'weights': 'distance'}
0.72241 (+/-0.094) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 57, 'p': 2, 'weights': 'distance'}
0.72241 (+/-0.094) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 57, 'p': 2, 'weights': 'distance'}
0.72241 (+/-0.094) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 57, 'p': 2, 'weights': 'distance'}
0.72222 (+/-0.090) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 45, 'p': 2, 'weights': 'distance'}
0.72222 (+/-0.090) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 45, 'p': 2, 'weights': 'distance'}
0.72222 (+/-0.090) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 45, 'p': 2, 'weights': 'distance'}
0.72184 (+/-0.091) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 49, 'p': 2, 'weights': 'distance'}
0.72184 (+/-0.091) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 49, 'p': 2, 'weights': 'distance'}
0.72184 (+/-0.091) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 49, 'p': 2, 'weights': 'distance'}
0.72165 (+/-0.095) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 48, 'p': 2, 'weights': 'distance'}
0.72165 (+/-0.103) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 64, 'p': 2, 'weights': 'distance'}
0.72165 (+/-0.095) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 48, 'p': 2, 'weights': 'distance'}
0.72165 (+/-0.094) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 52, 'p': 2, 'weights': 'distance'}
0.72165 (+/-0.103) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 64, 'p': 2, 'weights': 'distance'}
0.72165 (+/-0.095) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 48, 'p': 2, 'weights': 'distance'}
0.72165 (+/-0.103) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 64, 'p': 2, 'weights': 'distance'}
0.72145 (+/-0.093) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 52, 'p': 2, 'weights': 'distance'}
0.72145 (+/-0.101) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 67, 'p': 2, 'weights': 'distance'}
0.72145 (+/-0.098) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 69, 'p': 2, 'weights': 'distance'}
0.72145 (+/-0.098) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 70, 'p': 2, 'weights': 'distance'}
0.72145 (+/-0.098) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 69, 'p': 2, 'weights': 'distance'}
0.72145 (+/-0.098) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 70, 'p': 2, 'weights': 'distance'}
0.72145 (+/-0.093) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 52, 'p': 2, 'weights': 'distance'}
0.72145 (+/-0.101) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 67, 'p': 2, 'weights': 'distance'}
0.72145 (+/-0.098) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 69, 'p': 2, 'weights': 'distance'}
0.72145 (+/-0.098) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 70, 'p': 2, 'weights': 'distance'}
0.72126 (+/-0.096) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 60, 'p': 2, 'weights': 'distance'}
0.72126 (+/-0.096) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 60, 'p': 2, 'weights': 'distance'}
0.72126 (+/-0.101) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 67, 'p': 2, 'weights': 'distance'}
0.72126 (+/-0.096) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 60, 'p': 2, 'weights': 'distance'}
0.72107 (+/-0.095) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 55, 'p': 2, 'weights': 'distance'}
0.72107 (+/-0.095) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 55, 'p': 2, 'weights': 'distance'}
0.72107 (+/-0.095) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 55, 'p': 2, 'weights': 'distance'}
0.72068 (+/-0.096) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 56, 'p': 2, 'weights': 'distance'}
0.72068 (+/-0.099) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 62, 'p': 2, 'weights': 'distance'}
0.72068 (+/-0.094) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 47, 'p': 2, 'weights': 'distance'}
0.72068 (+/-0.096) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 56, 'p': 2, 'weights': 'distance'}
0.72068 (+/-0.099) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 62, 'p': 2, 'weights': 'distance'}
0.72068 (+/-0.096) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 56, 'p': 2, 'weights': 'distance'}
0.72068 (+/-0.099) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 62, 'p': 2, 'weights': 'distance'}
0.72049 (+/-0.094) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 47, 'p': 2, 'weights': 'distance'}
0.72049 (+/-0.094) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 47, 'p': 2, 'weights': 'distance'}
0.72011 (+/-0.098) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 47, 'p': 1, 'weights': 'distance'}
0.72011 (+/-0.098) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 47, 'p': 1, 'weights': 'distance'}
0.72011 (+/-0.098) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 47, 'p': 1, 'weights': 'distance'}
0.71992 (+/-0.094) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 46, 'p': 2, 'weights': 'distance'}
0.71992 (+/-0.103) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 50, 'p': 1, 'weights': 'distance'}
0.71992 (+/-0.103) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 50, 'p': 1, 'weights': 'distance'}
0.71992 (+/-0.094) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 46, 'p': 2, 'weights': 'distance'}
0.71992 (+/-0.103) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 50, 'p': 1, 'weights': 'distance'}
0.71972 (+/-0.098) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 66, 'p': 2, 'weights': 'distance'}
0.71972 (+/-0.094) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 46, 'p': 2, 'weights': 'distance'}
0.71972 (+/-0.098) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 66, 'p': 2, 'weights': 'distance'}
0.71972 (+/-0.098) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 66, 'p': 2, 'weights': 'distance'}
0.71934 (+/-0.097) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 48, 'p': 1, 'weights': 'distance'}
0.71934 (+/-0.099) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 51, 'p': 1, 'weights': 'distance'}
0.71934 (+/-0.097) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 48, 'p': 1, 'weights': 'distance'}
0.71934 (+/-0.099) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 51, 'p': 1, 'weights': 'distance'}
0.71934 (+/-0.097) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 48, 'p': 1, 'weights': 'distance'}
0.71934 (+/-0.099) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 51, 'p': 1, 'weights': 'distance'}
0.71876 (+/-0.099) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 45, 'p': 1, 'weights': 'distance'}
0.71876 (+/-0.102) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 68, 'p': 2, 'weights': 'distance'}
0.71876 (+/-0.099) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 45, 'p': 1, 'weights': 'distance'}
0.71876 (+/-0.102) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 68, 'p': 2, 'weights': 'distance'}
0.71876 (+/-0.099) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 45, 'p': 1, 'weights': 'distance'}
0.71876 (+/-0.102) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 68, 'p': 2, 'weights': 'distance'}
0.71857 (+/-0.101) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 49, 'p': 1, 'weights': 'distance'}
0.71857 (+/-0.102) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 49, 'p': 1, 'weights': 'distance'}
0.71857 (+/-0.101) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 49, 'p': 1, 'weights': 'distance'}
0.71838 (+/-0.097) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 46, 'p': 1, 'weights': 'distance'}
0.71838 (+/-0.097) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 46, 'p': 1, 'weights': 'distance'}
0.71838 (+/-0.097) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 46, 'p': 1, 'weights': 'distance'}
0.71780 (+/-0.102) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 52, 'p': 1, 'weights': 'distance'}
0.71780 (+/-0.100) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 67, 'p': 1, 'weights': 'distance'}
0.71780 (+/-0.102) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 52, 'p': 1, 'weights': 'distance'}
0.71780 (+/-0.100) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 67, 'p': 1, 'weights': 'distance'}
0.71780 (+/-0.102) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 52, 'p': 1, 'weights': 'distance'}
0.71780 (+/-0.100) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 67, 'p': 1, 'weights': 'distance'}
0.71761 (+/-0.100) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 54, 'p': 1, 'weights': 'distance'}
0.71761 (+/-0.100) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 54, 'p': 1, 'weights': 'distance'}
0.71761 (+/-0.100) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 54, 'p': 1, 'weights': 'distance'}
0.71742 (+/-0.103) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 66, 'p': 1, 'weights': 'distance'}
0.71742 (+/-0.103) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 68, 'p': 1, 'weights': 'distance'}
0.71742 (+/-0.107) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 70, 'p': 1, 'weights': 'distance'}
0.71742 (+/-0.103) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 66, 'p': 1, 'weights': 'distance'}
0.71742 (+/-0.103) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 68, 'p': 1, 'weights': 'distance'}
0.71742 (+/-0.107) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 70, 'p': 1, 'weights': 'distance'}
0.71742 (+/-0.103) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 66, 'p': 1, 'weights': 'distance'}
0.71742 (+/-0.103) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 68, 'p': 1, 'weights': 'distance'}
0.71742 (+/-0.107) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 70, 'p': 1, 'weights': 'distance'}
0.71626 (+/-0.101) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 55, 'p': 1, 'weights': 'distance'}
0.71626 (+/-0.101) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 55, 'p': 1, 'weights': 'distance'}
0.71626 (+/-0.103) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 65, 'p': 1, 'weights': 'distance'}
0.71626 (+/-0.101) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 55, 'p': 1, 'weights': 'distance'}
0.71607 (+/-0.103) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 65, 'p': 1, 'weights': 'distance'}
0.71607 (+/-0.103) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 65, 'p': 1, 'weights': 'distance'}
0.71569 (+/-0.103) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 64, 'p': 1, 'weights': 'distance'}
0.71569 (+/-0.101) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 69, 'p': 1, 'weights': 'distance'}
0.71569 (+/-0.103) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 64, 'p': 1, 'weights': 'distance'}
0.71569 (+/-0.103) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 64, 'p': 1, 'weights': 'distance'}
0.71569 (+/-0.101) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 69, 'p': 1, 'weights': 'distance'}
0.71549 (+/-0.100) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 69, 'p': 1, 'weights': 'distance'}
0.71530 (+/-0.100) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 53, 'p': 1, 'weights': 'distance'}
0.71530 (+/-0.100) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 53, 'p': 1, 'weights': 'distance'}
0.71530 (+/-0.105) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 63, 'p': 1, 'weights': 'distance'}
0.71530 (+/-0.100) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 53, 'p': 1, 'weights': 'distance'}
0.71511 (+/-0.105) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 63, 'p': 1, 'weights': 'distance'}
0.71511 (+/-0.105) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 63, 'p': 1, 'weights': 'distance'}
0.71473 (+/-0.105) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 60, 'p': 1, 'weights': 'distance'}
0.71473 (+/-0.105) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 60, 'p': 1, 'weights': 'distance'}
0.71473 (+/-0.105) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 60, 'p': 1, 'weights': 'distance'}
0.71434 (+/-0.106) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 58, 'p': 1, 'weights': 'distance'}
0.71434 (+/-0.104) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 62, 'p': 1, 'weights': 'distance'}
0.71434 (+/-0.104) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 56, 'p': 1, 'weights': 'distance'}
0.71434 (+/-0.106) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 58, 'p': 1, 'weights': 'distance'}
0.71434 (+/-0.104) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 62, 'p': 1, 'weights': 'distance'}
0.71434 (+/-0.106) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 58, 'p': 1, 'weights': 'distance'}
0.71434 (+/-0.104) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 62, 'p': 1, 'weights': 'distance'}
0.71415 (+/-0.104) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 56, 'p': 1, 'weights': 'distance'}
0.71415 (+/-0.104) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 56, 'p': 1, 'weights': 'distance'}
0.71396 (+/-0.103) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 57, 'p': 1, 'weights': 'distance'}
0.71376 (+/-0.103) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 57, 'p': 1, 'weights': 'distance'}
0.71376 (+/-0.103) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 61, 'p': 1, 'weights': 'distance'}
0.71376 (+/-0.103) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 61, 'p': 1, 'weights': 'distance'}
0.71376 (+/-0.103) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 57, 'p': 1, 'weights': 'distance'}
0.71376 (+/-0.103) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 61, 'p': 1, 'weights': 'distance'}
0.71357 (+/-0.105) for {'algorithm': 'ball_tree', 'leaf_size': 30, 'n_neighbors': 59, 'p': 1, 'weights': 'distance'}
0.71338 (+/-0.105) for {'algorithm': 'auto', 'leaf_size': 30, 'n_neighbors': 59, 'p': 1, 'weights': 'distance'}
0.71338 (+/-0.105) for {'algorithm': 'kd_tree', 'leaf_size': 30, 'n_neighbors': 59, 'p': 1, 'weights': 'distance'}
