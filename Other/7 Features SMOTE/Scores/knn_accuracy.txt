Best parameters set found on development set:
0.64891 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}

Grid scores on development set:
0.64891 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64714 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64714 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64625 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.64625 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64625 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64603 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64603 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64603 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64581 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64581 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64536 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64536 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.64536 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64536 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64514 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64514 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64492 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.64492 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64492 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64492 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64492 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64492 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.64492 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64492 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64470 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64470 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64470 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64470 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64470 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64470 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64470 (+/-0.018) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64470 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64470 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64470 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64447 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64447 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64447 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64447 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64447 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64447 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.64447 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.64425 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64425 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64425 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64425 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64425 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64403 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64403 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64403 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.64403 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64403 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64403 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64403 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64403 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.64403 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64403 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64403 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64403 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.64403 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64403 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64403 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64403 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64381 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64381 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64381 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64381 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64381 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64381 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64381 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64381 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64381 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64381 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64381 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64381 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64381 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64381 (+/-0.017) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64381 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64359 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64359 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64359 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64359 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64359 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64359 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64359 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64359 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64359 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64336 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64336 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64336 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.64336 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64336 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64336 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64336 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64336 (+/-0.017) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64336 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64336 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64314 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64314 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.64314 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64314 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64314 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64314 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64314 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64314 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64314 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.64314 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64314 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64314 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64314 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64314 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64314 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.64314 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64314 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64314 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.64314 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64314 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64314 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.64314 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64314 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64314 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64314 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.64314 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64292 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64292 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.64292 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64292 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64292 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64292 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64292 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64292 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64292 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64292 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64292 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64292 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64292 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64292 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64292 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64292 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64292 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64292 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.64292 (+/-0.013) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.64292 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64292 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64292 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64292 (+/-0.017) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64292 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64292 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.64292 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.64292 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64292 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64292 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64270 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64270 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64270 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.64270 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64270 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64270 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64270 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64270 (+/-0.014) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64270 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.64270 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.64270 (+/-0.014) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.64270 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.64270 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64270 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64270 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64270 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64270 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64270 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64270 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64270 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64270 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64270 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64270 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64270 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64270 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64270 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.64270 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.64248 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64248 (+/-0.014) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.64248 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.64248 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64248 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64248 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.64248 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64248 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.64248 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64248 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64248 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.64248 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64248 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64248 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64248 (+/-0.016) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64248 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64248 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64248 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64248 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64248 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64248 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64248 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64248 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64248 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64248 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64248 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64248 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64248 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64248 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.64248 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64248 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64248 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64225 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64225 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64225 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64225 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64225 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64225 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64225 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64225 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64225 (+/-0.018) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64225 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64225 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64225 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64225 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64225 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64225 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.64225 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64225 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64225 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64225 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.64225 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64225 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64225 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.64225 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.64225 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64225 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64225 (+/-0.017) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64225 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64225 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64225 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.64225 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64225 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64225 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.64225 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.64225 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64225 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64225 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64225 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.64225 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64225 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64225 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.64225 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64225 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.64203 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64203 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64203 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64203 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64203 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64203 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64203 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64203 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64203 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.64203 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64203 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64203 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64203 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64203 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64203 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64203 (+/-0.018) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.64203 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64203 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64203 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64203 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.64203 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64203 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64203 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64203 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64203 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64203 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.64203 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64203 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64203 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64203 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.64203 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64203 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.64203 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64203 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.64203 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64203 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64203 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64203 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64203 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.64203 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.64203 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64203 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64181 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64181 (+/-0.018) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64181 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64181 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64181 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64181 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64181 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64181 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64181 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64181 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64181 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64181 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.64181 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.64181 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64181 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64181 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64181 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64181 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.64181 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.64181 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.64181 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64181 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64181 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64181 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64181 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64181 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64181 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64181 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64181 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64181 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64181 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64181 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64181 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.64181 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.64181 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64181 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64159 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.64159 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64159 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64159 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.64159 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64159 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.64159 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64159 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.64159 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.64159 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.64159 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64159 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64159 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64159 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64159 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.64159 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.64159 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.64159 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64159 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64159 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.64159 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.64159 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64159 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64159 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.64159 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.64159 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.64159 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.64159 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64159 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64137 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64137 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64137 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64137 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64137 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64137 (+/-0.017) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.64137 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64137 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.64137 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64137 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64137 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64137 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64137 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64115 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.64115 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64115 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64115 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64115 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64115 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64115 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64115 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64115 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64115 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64115 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.64115 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64115 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64092 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64092 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64092 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.64092 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64092 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.017) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64092 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64092 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64092 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64092 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.64092 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64092 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64092 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64092 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64092 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.64070 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.64070 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.018) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64070 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.015) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64070 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64070 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64070 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64070 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64070 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.64070 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64070 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.64070 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64070 (+/-0.014) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64070 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64070 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64048 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.64048 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64048 (+/-0.018) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64048 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.64048 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64048 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64048 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.64048 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.64048 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64048 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.64048 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64048 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.64048 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64048 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.64048 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.64048 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.047) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.64048 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.64048 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64048 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64048 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.64048 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64048 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.64048 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64048 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.017) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.017) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64026 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64026 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.64026 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64026 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.64026 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64026 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64026 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64026 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.64026 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64026 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64026 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64026 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.64026 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64026 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64026 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.64026 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64026 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64026 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64026 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.64026 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.64026 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64026 (+/-0.051) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64026 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.013) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64026 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.64026 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64026 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.64004 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.64004 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64004 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64004 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64004 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64004 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64004 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.64004 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.64004 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64004 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64004 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.64004 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64004 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64004 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64004 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.64004 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64004 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64004 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64004 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64004 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64004 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64004 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64004 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64004 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.64004 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64004 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64004 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64004 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.64004 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.64004 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.64004 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63981 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63981 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63981 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63981 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63981 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63981 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.014) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63981 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.018) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63981 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63981 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63981 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63981 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63981 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63981 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63981 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63981 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63981 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63981 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63981 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63981 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.017) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63981 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63981 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63981 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63981 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63981 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63959 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63959 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63959 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63959 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63959 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63959 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63959 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63959 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63959 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63959 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63959 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63959 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63959 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63959 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63959 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63959 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63959 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63959 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63959 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63959 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63959 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63959 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63959 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63959 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63959 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63959 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63959 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63959 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63959 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63959 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63959 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63959 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63959 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63959 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63959 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63959 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63959 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63937 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63937 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63937 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63937 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63937 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63937 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63937 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63937 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63937 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.049) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63937 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63937 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63937 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.018) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63937 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63937 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63937 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63937 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.017) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63937 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63937 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.013) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.049) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.014) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63915 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63915 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63915 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63915 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63915 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63915 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63915 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63915 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63915 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63915 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63915 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63915 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63915 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63915 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63915 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63915 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.047) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63915 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63915 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63915 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63915 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.017) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.018) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.016) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.016) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.017) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63893 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63893 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63893 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63893 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.018) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63870 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63870 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63870 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63870 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63848 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63848 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63848 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63848 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.018) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63848 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63848 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63848 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.018) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63848 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63848 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63848 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63848 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63848 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63848 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63848 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63848 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63848 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63848 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63848 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63848 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63848 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63848 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63848 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63848 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.018) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.018) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63826 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63826 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63826 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63826 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63804 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63804 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63804 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63804 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63804 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63804 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.016) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.017) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63804 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63804 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63804 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63804 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63804 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63804 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63804 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63804 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63804 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63804 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63804 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63804 (+/-0.018) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63804 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63804 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63804 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63804 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63804 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63804 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.018) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.047) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63782 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63782 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63782 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63782 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.047) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63759 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63759 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63759 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63759 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.048) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.017) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.018) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63737 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63737 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63737 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63737 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.049) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63715 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63715 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63715 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63715 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.011) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.051) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.048) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63693 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63693 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63693 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63693 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.048) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.048) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.018) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63671 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63671 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63671 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63671 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.012) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63648 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63648 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63648 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63648 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.011) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.017) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.017) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63626 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63626 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63626 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63626 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.018) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.050) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.015) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.048) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.013) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63604 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.050) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63604 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63604 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63604 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.050) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.018) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.011) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.049) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.048) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.053) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63582 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63582 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63582 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63582 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.018) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.018) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.017) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.048) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63560 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63560 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63560 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63560 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.049) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63538 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63538 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63538 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63538 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.017) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63515 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63515 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63515 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63515 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.049) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.017) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.015) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.049) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.049) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63493 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.016) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63493 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63493 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63493 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63471 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63471 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63471 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63471 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.018) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.048) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.048) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.047) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63449 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63449 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63449 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63449 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.051) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.018) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.018) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63427 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63427 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63427 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63427 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.017) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.050) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.051) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63404 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63404 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63404 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63404 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.017) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63382 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 57, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63382 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63382 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63382 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.049) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.052) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63360 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63360 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63360 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63360 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.049) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63338 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63338 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63338 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63338 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.052) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63316 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63316 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63316 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.052) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63316 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63316 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63316 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63316 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63316 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63316 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63316 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63316 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63316 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63316 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'distance'}
0.63316 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63316 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63316 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63316 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63316 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.052) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63316 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63316 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63316 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63316 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.63316 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63316 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63316 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63293 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63293 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63293 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63293 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63293 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63293 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63293 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63293 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.055) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63293 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63293 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.052) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63293 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63293 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63293 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63293 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63293 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63293 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'distance'}
0.63293 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63293 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63293 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63293 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63293 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63293 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63293 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.049) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.018) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.018) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63271 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 55, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63271 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63271 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63271 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63249 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63249 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63249 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63249 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63249 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63249 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63249 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63249 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63249 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63249 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63249 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63249 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63249 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63249 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63249 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63249 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63249 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63249 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63249 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63249 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63249 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'distance'}
0.63249 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63249 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63249 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63249 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63227 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63227 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63227 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.63227 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63227 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63227 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63227 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63227 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63227 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63227 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63227 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63227 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63227 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63227 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63227 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.051) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.017) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63227 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63227 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63227 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63227 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63227 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63227 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63227 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63227 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63227 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63227 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63227 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63227 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63227 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63227 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63227 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63227 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63227 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63227 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63227 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63227 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63227 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63227 (+/-0.048) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63227 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63205 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63205 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63205 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.63205 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63205 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.016) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63205 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 59, 'classification__p': 2, 'classification__weights': 'distance'}
0.63205 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63205 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63205 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63205 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63205 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.016) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63205 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63205 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63205 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63182 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63182 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63182 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63182 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63182 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63182 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63182 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63182 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.049) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63182 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63182 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63182 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63182 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63182 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63182 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63182 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63182 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63182 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63182 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63182 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63182 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63182 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63182 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63182 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63182 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63182 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63182 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63182 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63160 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 69, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63160 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63160 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63160 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63160 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63160 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63160 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63160 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63160 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63160 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63160 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63160 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63160 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63160 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63160 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63160 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63160 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63160 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63160 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63160 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63160 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63160 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63160 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63160 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63160 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.050) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63160 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63160 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63160 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.63160 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63160 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 61, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63160 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63160 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63138 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63138 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63138 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63138 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63138 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63138 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63138 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63138 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63138 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63138 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.63138 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63138 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63138 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.016) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63138 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63138 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63138 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 51, 'classification__p': 2, 'classification__weights': 'distance'}
0.63138 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63138 (+/-0.049) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63138 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 49, 'classification__p': 2, 'classification__weights': 'distance'}
0.63138 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63138 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63138 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 53, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63138 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63138 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63138 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63138 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63138 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63138 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63138 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63138 (+/-0.048) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63138 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63138 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63138 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 67, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63138 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63138 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63138 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63116 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63116 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63116 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63116 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63116 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.63116 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63116 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63116 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63116 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63116 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63116 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63116 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63116 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63116 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63116 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.013) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.63116 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63116 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63116 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63116 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63116 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63116 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63116 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63116 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63116 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63116 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63116 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63116 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 43, 'classification__p': 2, 'classification__weights': 'distance'}
0.63116 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63116 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63116 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63116 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63094 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'distance'}
0.63094 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63094 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63094 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63094 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.049) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63094 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63094 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63094 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63094 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63094 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63094 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63094 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63094 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.048) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63094 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63094 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63094 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.017) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63094 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63094 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63094 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63094 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.63094 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63094 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.047) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63094 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63094 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63094 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63071 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63071 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63071 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63071 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63071 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63071 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63071 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63071 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63071 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63071 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63071 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63071 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63071 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63071 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63071 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63071 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63071 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63071 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63071 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63071 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63071 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.63071 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63071 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63071 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 47, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63071 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63071 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63071 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63071 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63071 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63071 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.63071 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.049) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63071 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63071 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63071 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63049 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63049 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'distance'}
0.63049 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63049 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63049 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63049 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63049 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63049 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 63, 'classification__p': 2, 'classification__weights': 'distance'}
0.63049 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63049 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63049 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63049 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63049 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63049 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63049 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63049 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63049 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63049 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'distance'}
0.63049 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63049 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63049 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.016) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63049 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63049 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63049 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63049 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63049 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63049 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63049 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63049 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63049 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63049 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 65, 'classification__p': 1, 'classification__weights': 'distance'}
0.63049 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63049 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63027 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63027 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63027 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63027 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63027 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63027 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63027 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63027 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.014) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63027 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63027 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63027 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63027 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63027 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63027 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63027 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63027 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63027 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63027 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63027 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63027 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63027 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63027 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.63027 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63027 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63027 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'distance'}
0.63027 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.051) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63027 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63027 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 39, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63027 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63027 (+/-0.047) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63027 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63027 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63027 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63027 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63027 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.63027 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.049) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63027 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63027 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63027 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63027 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63005 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63005 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 63, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63005 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63005 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.63005 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.63005 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63005 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63005 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63005 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63005 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63005 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63005 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63005 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63005 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63005 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63005 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63005 (+/-0.018) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.63005 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.63005 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63005 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63005 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63005 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63005 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63005 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63005 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63005 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.63005 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63005 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63005 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63005 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63005 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.63005 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63005 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63005 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63005 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.63005 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.63005 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63005 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.63005 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.63005 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62983 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62983 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62983 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62983 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62983 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62983 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62983 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62983 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62983 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62983 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62983 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62983 (+/-0.048) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62983 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62983 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62983 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62983 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62983 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62983 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62983 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62983 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62983 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62983 (+/-0.049) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62983 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62983 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62983 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62983 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62983 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62983 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62983 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62983 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62983 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62983 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.62983 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62983 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62983 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62983 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62983 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62983 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62960 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62960 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62960 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62960 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62960 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62960 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62960 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62960 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62960 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62960 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62960 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62960 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62960 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62960 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62960 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62960 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62960 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62960 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62960 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62960 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62960 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62960 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.048) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62960 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62960 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62960 (+/-0.016) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62960 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62960 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 41, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62960 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62960 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62960 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62960 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62960 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62960 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62960 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 43, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62960 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62960 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62960 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62960 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62960 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62960 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62960 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62960 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62960 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62960 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62960 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62960 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62960 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62960 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62960 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62960 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62960 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.62960 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62960 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62960 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62960 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 61, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62938 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62938 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62938 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62938 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62938 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62938 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62938 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62938 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62938 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 69, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.050) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.62938 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62938 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 37, 'classification__p': 2, 'classification__weights': 'distance'}
0.62938 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62938 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62938 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62938 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62938 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62938 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62938 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62938 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62938 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62938 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62938 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62938 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62938 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62938 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62938 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62938 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62938 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62938 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.62938 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62916 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62916 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62916 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62916 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.62916 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.62916 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62916 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62916 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62916 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.62916 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.62916 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62916 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62916 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62916 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62916 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62916 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62916 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62916 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62916 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62916 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62916 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62916 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62916 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62916 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62916 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62916 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62916 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62916 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62916 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62916 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.62916 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62916 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62916 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62916 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62916 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62916 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62916 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62916 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62916 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62916 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62916 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62916 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62916 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62916 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62916 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62916 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62916 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62916 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62916 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62916 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62916 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62916 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62916 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62894 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62894 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62894 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62894 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62894 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62894 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62894 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62894 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62894 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62894 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.62894 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62894 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62894 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.62894 (+/-0.016) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62894 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62894 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62894 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62894 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.62894 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.62894 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62894 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62894 (+/-0.015) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 65, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62894 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 45, 'classification__p': 2, 'classification__weights': 'distance'}
0.62894 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62894 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62894 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62894 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.62894 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62894 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.62894 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62894 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62894 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62894 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62894 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62894 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62894 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62894 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 41, 'classification__p': 1, 'classification__weights': 'distance'}
0.62894 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62894 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62894 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62894 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62894 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62894 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 59, 'classification__p': 1, 'classification__weights': 'distance'}
0.62894 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62894 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62894 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62894 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62894 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62894 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62894 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62872 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62872 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62872 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62872 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62872 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62872 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62872 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62872 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62872 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62872 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62872 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62872 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.62872 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62872 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62872 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 33, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62872 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62872 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62872 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62872 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62872 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62872 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 49, 'classification__p': 1, 'classification__weights': 'distance'}
0.62872 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62872 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62872 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62872 (+/-0.051) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62872 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62872 (+/-0.048) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62872 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.62872 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62872 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62872 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62872 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.62872 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62872 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.62872 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62872 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62872 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62872 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62872 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62872 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62872 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62872 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62872 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62872 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62872 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62850 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62850 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62850 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62850 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62850 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62850 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62850 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62850 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62850 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62850 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62850 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62850 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.62850 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62850 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62850 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62850 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62850 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62850 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62850 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62850 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62850 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62850 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62850 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62850 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62850 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62850 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62850 (+/-0.016) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62850 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62850 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62850 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62850 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62850 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62850 (+/-0.016) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62850 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62850 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62850 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62850 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62850 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62850 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62850 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62850 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62850 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.62850 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62850 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62850 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62850 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62850 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62850 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62850 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62850 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62850 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62850 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 53, 'classification__p': 1, 'classification__weights': 'distance'}
0.62850 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62850 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62850 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 51, 'classification__p': 1, 'classification__weights': 'distance'}
0.62850 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62850 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62850 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62850 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62850 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62850 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.62827 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62827 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62827 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62827 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62827 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62827 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62827 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62827 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62827 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62827 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 67, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62827 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.62827 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62827 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62827 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62827 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62827 (+/-0.049) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62827 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62827 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62827 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62827 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62827 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62827 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62827 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62827 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62827 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.62827 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62827 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62827 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62827 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62827 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62827 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62827 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62827 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62827 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62827 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62827 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.62827 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62827 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62827 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62827 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62827 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62827 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62827 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62827 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62827 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62827 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62827 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62827 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62827 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62827 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62827 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62827 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62827 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62827 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62827 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62827 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62827 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.62827 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62805 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62805 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62805 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62805 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62805 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62805 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62805 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62805 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62805 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62805 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62805 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62805 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62805 (+/-0.018) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62805 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62805 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62805 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62805 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62805 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62805 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62805 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62805 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62805 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62805 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62805 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62805 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62805 (+/-0.050) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62805 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62805 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62805 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62805 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62805 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62805 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62805 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62805 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62805 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62805 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62805 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62805 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62805 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62805 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62805 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62805 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62805 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62805 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62805 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62805 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62805 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62805 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62805 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62805 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62805 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62783 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62783 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62783 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62783 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62783 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62783 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62783 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62783 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62783 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62783 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62783 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62783 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62783 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62783 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62783 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62783 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62783 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62783 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62783 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62783 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62783 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62783 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62783 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62783 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62783 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62783 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62783 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62783 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62783 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62783 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 57, 'classification__p': 1, 'classification__weights': 'distance'}
0.62783 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62783 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62783 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62783 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62783 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62783 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.62783 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62783 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62783 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62783 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62783 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62783 (+/-0.047) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62783 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62783 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62783 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62783 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62761 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62761 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62761 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62761 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62761 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62761 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62761 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.62761 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62761 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62761 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62761 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 35, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62761 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62761 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62761 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62761 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62761 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62761 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 55, 'classification__p': 1, 'classification__weights': 'distance'}
0.62761 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62761 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62761 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62761 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62761 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62761 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62761 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62761 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62761 (+/-0.051) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62761 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62761 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62761 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62761 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62761 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62761 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62761 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62761 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62761 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62761 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62761 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62761 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62761 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62761 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62761 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62761 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62761 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62761 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62761 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62761 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62761 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62739 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62739 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62739 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62739 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62739 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62739 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62739 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62739 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62739 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62739 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62739 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62739 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62739 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62739 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62739 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62739 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62739 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62739 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62739 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62739 (+/-0.017) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62739 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62739 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62739 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62739 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62739 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62739 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62739 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62739 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62739 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62739 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62739 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62739 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62739 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62739 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62739 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62739 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62739 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62739 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62739 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62739 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62739 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62739 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62739 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62739 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62739 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62739 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62739 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62739 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62739 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62739 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62739 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62739 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62739 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62739 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62739 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62739 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62739 (+/-0.010) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62739 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62739 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62739 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62739 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62716 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62716 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62716 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62716 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62716 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62716 (+/-0.017) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62716 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62716 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62716 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62716 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62716 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62716 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62716 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62716 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62716 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62716 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62716 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62716 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62716 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62716 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62716 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62716 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62716 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62716 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62716 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62716 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62716 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62716 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62716 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62716 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62716 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62716 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62716 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62716 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62716 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62716 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62716 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62716 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62716 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62716 (+/-0.048) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62716 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62716 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62716 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62716 (+/-0.018) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62716 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62716 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 31, 'classification__p': 2, 'classification__weights': 'distance'}
0.62716 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62694 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62694 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62694 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62694 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62694 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62694 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62694 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62694 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62694 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62694 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62694 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62694 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62694 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62694 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62694 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62694 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62694 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62694 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62694 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62694 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62694 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62694 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62694 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62694 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62694 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62694 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62694 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62694 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62694 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62694 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62694 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62694 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62694 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62694 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62694 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62694 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62694 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62694 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.62694 (+/-0.051) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62694 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62694 (+/-0.053) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62694 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62694 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62694 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62694 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62694 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62694 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62694 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62694 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62694 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62694 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62694 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62694 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62672 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62672 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62672 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62672 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62672 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62672 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 37, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.052) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62672 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62672 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62672 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62672 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62672 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62672 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62672 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62672 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62672 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62672 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62672 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62672 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62672 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62672 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62672 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62672 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62672 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62672 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62672 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62672 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62672 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62672 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62672 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62672 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62672 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62672 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62672 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62672 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62672 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62672 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62672 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62672 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62672 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62650 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62650 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62650 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62650 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62650 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62650 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62650 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62650 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62650 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62650 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62650 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62650 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62650 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62650 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62650 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62650 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62650 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62650 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62650 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62650 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62650 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62650 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62650 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62650 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62650 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62650 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62650 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62650 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62650 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62650 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62650 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62650 (+/-0.017) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62650 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62650 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62650 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62650 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62650 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62650 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62650 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62650 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62650 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62650 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62650 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62650 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62650 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62650 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62650 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62650 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62650 (+/-0.013) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62650 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62650 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62650 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62628 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62628 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62628 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62628 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62628 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62628 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62628 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62628 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62628 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62628 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62628 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62628 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62628 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62628 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62628 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62628 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62628 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62628 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62628 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62628 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62628 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62628 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62628 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62628 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62628 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62628 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62628 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62628 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62628 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62628 (+/-0.017) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62628 (+/-0.017) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62628 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62628 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62628 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62628 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62628 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62628 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62628 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62628 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62628 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62628 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62628 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62605 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62605 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62605 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62605 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62605 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62605 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62605 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62605 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62605 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62605 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62605 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62605 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62605 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62605 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62605 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62605 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62605 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62605 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62605 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62605 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62605 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62605 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62605 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62605 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 47, 'classification__p': 1, 'classification__weights': 'distance'}
0.62605 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62605 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62605 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62605 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62605 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62605 (+/-0.018) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62605 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62605 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62605 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62605 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62605 (+/-0.047) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62605 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62605 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62583 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62583 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62583 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62583 (+/-0.018) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62583 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62583 (+/-0.013) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62583 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62583 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62583 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62583 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62583 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62583 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62583 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62583 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62583 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62583 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62583 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62583 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62583 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62583 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62583 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62583 (+/-0.016) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62583 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62583 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62583 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62583 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62583 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62583 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62583 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62583 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62583 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62583 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62583 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62583 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62583 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62583 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62583 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62583 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62583 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62583 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62583 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62583 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62583 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62583 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62583 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62583 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62561 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62561 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62561 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62561 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62561 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62561 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62561 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62561 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62561 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62561 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62561 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62561 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62561 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62561 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62561 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62561 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62561 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62561 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62561 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62561 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62561 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62561 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62561 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62561 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62561 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62561 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62561 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62561 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62561 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62561 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62561 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62561 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62561 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62561 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62561 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62561 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62561 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62561 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62561 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 45, 'classification__p': 1, 'classification__weights': 'distance'}
0.62561 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62561 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62561 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62561 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62561 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62561 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62561 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62561 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62561 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62561 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62561 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62561 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62561 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62561 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62539 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62539 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62539 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62539 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62539 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62539 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62539 (+/-0.018) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62539 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62539 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62539 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62539 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62539 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62539 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62539 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62539 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62539 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62539 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62539 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62539 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62539 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62539 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62539 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62539 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62539 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62539 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62539 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62539 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62539 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62539 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62539 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62539 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62539 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62539 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62539 (+/-0.047) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62539 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62539 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62539 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62539 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62517 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62517 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62517 (+/-0.018) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62517 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62517 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62517 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62517 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62517 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62517 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62517 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62517 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62517 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62517 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62517 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62517 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62517 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62517 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62517 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62517 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62517 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62517 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62517 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62517 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62517 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62517 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62517 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62517 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62517 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62517 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62517 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62517 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62517 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62517 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62517 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62517 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62517 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62517 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62517 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62494 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62494 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62494 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62494 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62494 (+/-0.013) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62494 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62494 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62494 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62494 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62494 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62494 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62494 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62494 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62494 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62494 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62494 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62494 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62494 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62494 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62494 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62494 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62494 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62494 (+/-0.016) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62494 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62494 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62494 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62494 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62494 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62494 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62494 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 39, 'classification__p': 1, 'classification__weights': 'distance'}
0.62494 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62494 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62494 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62494 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62494 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62494 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62494 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62494 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62494 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62494 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 27, 'classification__p': 2, 'classification__weights': 'distance'}
0.62494 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62494 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62494 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62494 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62472 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62472 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62472 (+/-0.016) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62472 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62472 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62472 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62472 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62472 (+/-0.050) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62472 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62472 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62472 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62472 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62472 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62472 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62472 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62472 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62472 (+/-0.012) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62472 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62472 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62472 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62472 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62472 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62472 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62472 (+/-0.016) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62472 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62472 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62472 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62472 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62472 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62472 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62472 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62472 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62472 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62472 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62450 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62450 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62450 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62450 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62450 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62450 (+/-0.016) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62450 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62450 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62450 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62450 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62450 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62450 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62450 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62450 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62450 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62450 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62450 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62450 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62450 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62450 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62450 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62450 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62450 (+/-0.018) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62450 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62450 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62450 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62450 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62450 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62450 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62450 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62450 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62450 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62450 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62450 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62450 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62450 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62428 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62428 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62428 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62428 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62428 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62428 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62428 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62428 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62428 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62428 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62428 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62428 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62428 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62428 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62428 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62428 (+/-0.014) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62428 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62428 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62428 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62428 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62428 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62428 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62428 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62428 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62428 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62428 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62406 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62406 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62406 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62406 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62406 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62406 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62406 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62406 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62406 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62406 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62406 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62406 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62406 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62406 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62406 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62406 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62406 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62406 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62406 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62406 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 31, 'classification__p': 1, 'classification__weights': 'distance'}
0.62406 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62406 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62406 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62406 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62406 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62406 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62406 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62406 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62406 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62406 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62406 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62406 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62406 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62406 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62406 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62406 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62406 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62383 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62383 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62383 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62383 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62383 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62383 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62383 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62383 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62383 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62383 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62383 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62383 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62383 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62383 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 25, 'classification__p': 2, 'classification__weights': 'distance'}
0.62383 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62383 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62383 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62383 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62383 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62383 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62383 (+/-0.018) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62383 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62383 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62361 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62361 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62361 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62361 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62361 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62361 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62361 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62361 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62361 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62361 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62361 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62361 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62361 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62361 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62361 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62361 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62361 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62361 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62361 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62361 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62361 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62361 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62361 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62361 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62361 (+/-0.017) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62361 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62361 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62361 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62361 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62361 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62361 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62361 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62361 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62361 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62339 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62339 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62339 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62339 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62339 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62339 (+/-0.050) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62339 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62339 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62339 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62339 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62339 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62339 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62339 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62339 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62339 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62339 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.62339 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62339 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62339 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62339 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62339 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62339 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62339 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62339 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62339 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62339 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62339 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62339 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62339 (+/-0.050) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62339 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62317 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62317 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62317 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62317 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62317 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62317 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62317 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62317 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62317 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62317 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62317 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62317 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62317 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 35, 'classification__p': 1, 'classification__weights': 'distance'}
0.62317 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62317 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62317 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62317 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62317 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62317 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62317 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62317 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62317 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62317 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62317 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62317 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62317 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62317 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62295 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62295 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62295 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62295 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62295 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62295 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62295 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62295 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62295 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62295 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62295 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62295 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62295 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62295 (+/-0.048) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62295 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62295 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62295 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62295 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62295 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62295 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62273 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62273 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62273 (+/-0.048) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62273 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62273 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62273 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62273 (+/-0.016) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62273 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62273 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62273 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62273 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62273 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62273 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62273 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62273 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62273 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62273 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62273 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62273 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62273 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.62273 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62273 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62273 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62273 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62273 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62273 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.62273 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62273 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62273 (+/-0.048) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62273 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62273 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62273 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62273 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62273 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62273 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62273 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62250 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 33, 'classification__p': 1, 'classification__weights': 'distance'}
0.62250 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62250 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62250 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62250 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.62250 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62250 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62250 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62250 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62250 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62250 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62250 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62250 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62250 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62250 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62250 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62250 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62250 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62250 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62250 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62250 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62250 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 29, 'classification__p': 1, 'classification__weights': 'distance'}
0.62250 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62250 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62228 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62228 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62228 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62228 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62228 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62228 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62228 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62228 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62228 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62228 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62228 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62228 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62228 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.62228 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62228 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62228 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62228 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62228 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62228 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62228 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62228 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62206 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62206 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62206 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62206 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62206 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62206 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62206 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62206 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62206 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62206 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62206 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62206 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62206 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62206 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62206 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62206 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62206 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62206 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62206 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62206 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62206 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62206 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.62206 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62206 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62206 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62206 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62206 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 29, 'classification__p': 2, 'classification__weights': 'distance'}
0.62206 (+/-0.013) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62206 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62206 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62206 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.62206 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62206 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62184 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62184 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62184 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62184 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62184 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62184 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62184 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62184 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62184 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62184 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62184 (+/-0.017) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62184 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62184 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62184 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62184 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.62184 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62184 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62184 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62184 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62184 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62184 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.62162 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62162 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62162 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62162 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62162 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62162 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62162 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62162 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62162 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62162 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62162 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62162 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62162 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 23, 'classification__p': 2, 'classification__weights': 'distance'}
0.62162 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62162 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62162 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62162 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62162 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62162 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62162 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62162 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'distance'}
0.62162 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62162 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62162 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62162 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62139 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62139 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62139 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62139 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62139 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62139 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62139 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62139 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62139 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62139 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.62139 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62139 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62139 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62139 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62139 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62139 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62139 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62139 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62139 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62139 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62139 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62139 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62139 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62139 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62139 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62139 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62139 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62139 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.62117 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62117 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62117 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62117 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62117 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62117 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62117 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62117 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62117 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62117 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62117 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62117 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62117 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62117 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 27, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62117 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62117 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62117 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62117 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62117 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.62117 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62117 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62095 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.62095 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62095 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62095 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62095 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62095 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62095 (+/-0.018) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62095 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62095 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62095 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62095 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62095 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62095 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62095 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.62095 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62095 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62095 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62095 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62073 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62073 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62073 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62073 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62073 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62073 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62073 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62073 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62073 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62073 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62073 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62073 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62073 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62073 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62073 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62073 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62073 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62073 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62073 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62073 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62073 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.62073 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62073 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62073 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62073 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62051 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62051 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62051 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62051 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62051 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62051 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62051 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62051 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62051 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62051 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62051 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62051 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62051 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62051 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62051 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62051 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62051 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62051 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62051 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62051 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62051 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62028 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62028 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.62028 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62028 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62028 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62028 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62028 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.62028 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62028 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62028 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62028 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62028 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62028 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62028 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.62028 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.62028 (+/-0.048) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62028 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.62028 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.62028 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.62028 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 25, 'classification__p': 1, 'classification__weights': 'distance'}
0.62028 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62006 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62006 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62006 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62006 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62006 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.62006 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62006 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.62006 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62006 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.62006 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62006 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.62006 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.62006 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62006 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62006 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.62006 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62006 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62006 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.62006 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.62006 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.62006 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 23, 'classification__p': 1, 'classification__weights': 'distance'}
0.62006 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.62006 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61984 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61984 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61984 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61984 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61984 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61984 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61984 (+/-0.051) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61984 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61984 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61984 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61984 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61984 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61984 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61984 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61984 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61984 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61984 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61984 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61984 (+/-0.016) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61984 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61984 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.61984 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61984 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61962 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61962 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.61962 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61962 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61962 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61962 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61962 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61962 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61962 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61962 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.61962 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61962 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61962 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61962 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61962 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.61962 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61962 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61962 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61962 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61962 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61962 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61962 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61962 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61962 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61940 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61940 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61940 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61940 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61940 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61940 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61940 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61940 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61940 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61940 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.61940 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61940 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61940 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61940 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61940 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61940 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61940 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61940 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61940 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61940 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61940 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61940 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61917 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61917 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61917 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61917 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61917 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61917 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61917 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61917 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.61917 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61917 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61917 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61917 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61917 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61917 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61917 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61917 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61917 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61917 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61917 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61917 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61917 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61917 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61917 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61917 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61917 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61917 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61917 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61917 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61917 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61895 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61895 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61895 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61895 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61895 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61895 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.61895 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.61895 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61895 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.61895 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61895 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61895 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61873 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61873 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61873 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61873 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61873 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.61873 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61873 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61873 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61873 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61873 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61873 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61873 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61873 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61873 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61873 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61873 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61873 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 21, 'classification__p': 1, 'classification__weights': 'distance'}
0.61873 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61873 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61873 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61873 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61873 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61873 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61851 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61851 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61851 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61851 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61851 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61851 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61851 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61851 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61851 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61851 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61851 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.61851 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61851 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61851 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61851 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61851 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61851 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61851 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61851 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.61851 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61851 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61851 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61829 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61829 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61829 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61829 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61829 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61829 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61829 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61829 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61829 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61829 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61829 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61829 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61829 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61829 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61829 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61829 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61829 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61829 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61829 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61829 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61829 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.61829 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61829 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61829 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61829 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61829 (+/-0.018) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61806 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61806 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61806 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61806 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61806 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61806 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61806 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61806 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61806 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61806 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61806 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61806 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61806 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61806 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61806 (+/-0.049) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61806 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61806 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61806 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61806 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61806 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61806 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.61784 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61784 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61784 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61784 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61784 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 21, 'classification__p': 2, 'classification__weights': 'distance'}
0.61784 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61784 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61784 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61784 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61784 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61784 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61784 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61784 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.61784 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61784 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61762 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61762 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61762 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61762 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61762 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61762 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61762 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61762 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.61762 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61762 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61762 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61762 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.61762 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61762 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61762 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61762 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.61762 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61740 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61740 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61740 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61740 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61740 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61740 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61740 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61740 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61740 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61740 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61740 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61740 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61740 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61740 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61740 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61740 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61740 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61740 (+/-0.051) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61740 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61718 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61718 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61718 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61718 (+/-0.051) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61718 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61718 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61718 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61718 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61718 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61718 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61718 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61718 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61718 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61718 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61718 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61718 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61718 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61718 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61718 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61718 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61718 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61718 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61718 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61718 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61718 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61718 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61696 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61696 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61696 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61696 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61696 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61696 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61696 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61696 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61696 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61696 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61696 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61696 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61696 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61696 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61696 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 17, 'classification__p': 2, 'classification__weights': 'distance'}
0.61696 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61696 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61696 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61696 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61696 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61696 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61696 (+/-0.049) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61696 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61696 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61696 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 19, 'classification__p': 2, 'classification__weights': 'distance'}
0.61696 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61673 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61673 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61673 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61673 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61673 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61673 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61673 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61673 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61673 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61673 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61673 (+/-0.017) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61673 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61673 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61673 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61673 (+/-0.049) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61673 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61673 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61673 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61673 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61673 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61673 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61673 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61673 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61673 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61651 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61651 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61651 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61651 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61651 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61651 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61651 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61651 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61651 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61651 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61651 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61651 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61651 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61651 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61651 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61651 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61651 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61651 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61651 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61651 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61651 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61651 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61651 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61651 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61651 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61629 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61629 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61629 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61629 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61629 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61629 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61629 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61629 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61629 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61629 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61629 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61629 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61629 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61629 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61629 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61629 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61629 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61629 (+/-0.047) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61629 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61629 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61607 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61607 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61607 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61607 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61607 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61607 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61607 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61607 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61607 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61607 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61607 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61607 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61607 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61607 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61607 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61585 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61585 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61585 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61585 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61585 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61585 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61585 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61585 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61585 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61585 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61585 (+/-0.012) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61585 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61585 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61585 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61585 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61585 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61585 (+/-0.015) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61585 (+/-0.049) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61562 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61562 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61562 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61562 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61562 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61562 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61562 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61562 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61562 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61562 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61562 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61562 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61562 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61562 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61562 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61562 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61562 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61562 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61562 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61562 (+/-0.048) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61562 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61562 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61562 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61562 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61540 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61540 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61540 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61540 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61540 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61540 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61540 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61540 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61540 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61540 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61540 (+/-0.049) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61540 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61540 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61540 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61540 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61540 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61540 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61540 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61540 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61540 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61540 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61540 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61540 (+/-0.047) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61540 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61540 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61540 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61540 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61540 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61540 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61518 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61518 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61518 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61518 (+/-0.017) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61518 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61518 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61518 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61518 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61518 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61518 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61518 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61518 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61518 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61518 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61518 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61518 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61518 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61518 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61518 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61518 (+/-0.048) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61496 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61496 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61496 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61496 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61496 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61496 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61496 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61496 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61496 (+/-0.017) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61496 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61496 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61496 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61496 (+/-0.048) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61496 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61496 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61496 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61496 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61496 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61496 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61496 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61496 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61474 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61474 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61474 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61474 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61474 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61474 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61474 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61474 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61474 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61474 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61474 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61474 (+/-0.049) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61474 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61474 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61474 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61474 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61474 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61474 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61474 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61451 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61451 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61451 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61451 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61451 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61451 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61451 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61451 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61451 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61451 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61451 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61451 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61451 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61451 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61451 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61451 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61451 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61451 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61451 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61451 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61451 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61451 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61451 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61451 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61451 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61451 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61451 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61429 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61429 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61429 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61429 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61429 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61429 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61429 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61429 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61429 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61429 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61429 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61429 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61429 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61429 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61429 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61429 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61429 (+/-0.047) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.61429 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61429 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61429 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61429 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61429 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61407 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61407 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61407 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61407 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61407 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61407 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61407 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61407 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61407 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61407 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61407 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61407 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61407 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61407 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61385 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61385 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61385 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.61385 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61385 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61385 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61385 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61385 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61385 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61385 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61385 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61385 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61385 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61385 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61385 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61385 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61385 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61385 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61385 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61385 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61385 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61385 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61385 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61363 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61363 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61363 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61363 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61363 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61363 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61363 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61363 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61363 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61363 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61363 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61363 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61363 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61363 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61363 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61363 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61363 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61363 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61363 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61340 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61340 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61340 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61340 (+/-0.017) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61340 (+/-0.017) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61340 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61340 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61340 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61340 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61340 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61340 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61340 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61340 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61340 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61340 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61340 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61340 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61340 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61340 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61340 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61318 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61318 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61318 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61318 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61318 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61318 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61318 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61318 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61318 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61318 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61318 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61318 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61318 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61318 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61318 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61318 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61318 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61318 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61318 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61318 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61318 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61318 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61318 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61318 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61318 (+/-0.018) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61318 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61318 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61318 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61318 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61318 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61296 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61296 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61296 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61296 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61296 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61296 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61296 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61296 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61296 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61296 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61296 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61296 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61296 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61296 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61296 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61296 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61296 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61296 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61296 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61296 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.61296 (+/-0.054) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61296 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61296 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61296 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61296 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61274 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61274 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61274 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61274 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61274 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61274 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61274 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61274 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61274 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61274 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61274 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61274 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61274 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61274 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61274 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61274 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61274 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61274 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.61274 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61274 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61274 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61274 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61274 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61274 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61274 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61274 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61252 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61252 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61252 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61252 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61252 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61252 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61252 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61252 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61252 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61252 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61252 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61252 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61252 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61252 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61252 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 19, 'classification__p': 1, 'classification__weights': 'distance'}
0.61252 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61252 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61252 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61252 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61252 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61252 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61252 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61229 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61229 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61229 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61229 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61229 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61229 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.61229 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61229 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61229 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61229 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61229 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61229 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61229 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61229 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61229 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61229 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61229 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61229 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61229 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.61207 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61207 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61207 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61207 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.61207 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61207 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.61207 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61207 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61207 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61207 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.61207 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61207 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61207 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61207 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61207 (+/-0.017) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.61207 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61207 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61207 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61207 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61207 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61207 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61207 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61207 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61207 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61207 (+/-0.018) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61207 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61207 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61185 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61185 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61185 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61185 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61185 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61185 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.61185 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61185 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61185 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61185 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61185 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61185 (+/-0.050) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61185 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61185 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61185 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61185 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61185 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61185 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61185 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61163 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61163 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61163 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61163 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61163 (+/-0.050) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61163 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61163 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61163 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61163 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61163 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61163 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61163 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61163 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.61163 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61163 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61163 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61141 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61141 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61141 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61141 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61141 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61141 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.61141 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61141 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61141 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61141 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61141 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61141 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61141 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61141 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61141 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61141 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.61141 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61141 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61141 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61141 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61141 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.61141 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61141 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61119 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61119 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61119 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61119 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61119 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61119 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61119 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61119 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61119 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61096 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61096 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61096 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61096 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61096 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61096 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61096 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61096 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.61096 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.61096 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61096 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61096 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61096 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.61096 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.61096 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61096 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61096 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61096 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 15, 'classification__p': 2, 'classification__weights': 'distance'}
0.61096 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61096 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61096 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61096 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61074 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61074 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61074 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.61074 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.61074 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61074 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61074 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61074 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.61074 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61074 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61074 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61074 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61074 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61074 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.61074 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61074 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61074 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61074 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61074 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61074 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61074 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61074 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.61074 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61074 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61074 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61074 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61052 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.61052 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61052 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.61052 (+/-0.014) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61052 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.61052 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61052 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61052 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61052 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61052 (+/-0.052) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61052 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61052 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61052 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.61052 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61052 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61052 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61052 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61052 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61052 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61052 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61052 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.61052 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61052 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61052 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61052 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61030 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61030 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61030 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.61030 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61030 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61030 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61030 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61030 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.61030 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61030 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61030 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61030 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61030 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61030 (+/-0.050) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61030 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61030 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61030 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.61030 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61030 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.61008 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61008 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61008 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.61008 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.61008 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61008 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61008 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.61008 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.61008 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61008 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61008 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.61008 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.61008 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60985 (+/-0.062) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60985 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60985 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.60985 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60985 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.60985 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60985 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60985 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60985 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60985 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60985 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60985 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60985 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60985 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'distance'}
0.60985 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60985 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60985 (+/-0.051) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 17, 'classification__p': 1, 'classification__weights': 'distance'}
0.60963 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60963 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60963 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60963 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60963 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.60963 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60963 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60963 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60963 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60963 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60963 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60963 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60963 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60963 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60963 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60963 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60963 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60963 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60963 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60963 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60963 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60963 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60963 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60963 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60941 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.60941 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60941 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60941 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60941 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60941 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60941 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60941 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60941 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60941 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60941 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60941 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60941 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60941 (+/-0.017) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60941 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60941 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.60941 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60941 (+/-0.015) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60941 (+/-0.018) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60941 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60941 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60941 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60941 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60941 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60941 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60941 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60941 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60941 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60919 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60919 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60919 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60919 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60919 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60919 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60919 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60919 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.60919 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60919 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60919 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60919 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60919 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60897 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60897 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60897 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60897 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60897 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60897 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60897 (+/-0.052) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60897 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60897 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60897 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60897 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60897 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60897 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60897 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60897 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60897 (+/-0.051) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.60897 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60897 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60897 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60897 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60897 (+/-0.047) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.60897 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60897 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60897 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60897 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60874 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60874 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60874 (+/-0.050) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60874 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60874 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60874 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60874 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60874 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60874 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60874 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60874 (+/-0.016) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60874 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60874 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60874 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60874 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60874 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60874 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60874 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60874 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60874 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60874 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60852 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60852 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60852 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60852 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60852 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60852 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60852 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60852 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60852 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60852 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60852 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60852 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60852 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60852 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60852 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60852 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60852 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60852 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60852 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60830 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60830 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60830 (+/-0.018) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60830 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60830 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60830 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60830 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.60830 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60830 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60830 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60830 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60830 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60830 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60830 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60830 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60830 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60830 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60808 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60808 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60808 (+/-0.051) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60808 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60808 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60808 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60808 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60808 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60808 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60808 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60808 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60808 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60808 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60808 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60808 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60808 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60808 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.60808 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60786 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60786 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60786 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60786 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60786 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60786 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60786 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60786 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60786 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60786 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60786 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60786 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60786 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60786 (+/-0.053) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60786 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60786 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60786 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60786 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60786 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60786 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60763 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60763 (+/-0.016) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60763 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60763 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60763 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60763 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60763 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60763 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60763 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60763 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60763 (+/-0.051) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60763 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60763 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60763 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60763 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60763 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60741 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60741 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60741 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60741 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60741 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60741 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60741 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60741 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60741 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60741 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60741 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60741 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60741 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60741 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60741 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60741 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60719 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60719 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60719 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60719 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60719 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60719 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60719 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60719 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.60719 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60719 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60719 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60719 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60719 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60719 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60719 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60719 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60719 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60719 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60719 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60719 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60719 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60697 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60697 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60697 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60697 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60697 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60697 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60697 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60697 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60697 (+/-0.050) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'distance'}
0.60697 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60697 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60697 (+/-0.050) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60697 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60697 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60697 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60697 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60697 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60675 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60675 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60675 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60675 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60675 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60675 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60675 (+/-0.048) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60675 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60675 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60675 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60675 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60675 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60675 (+/-0.052) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60652 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60652 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60652 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60652 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60652 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60652 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60652 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60652 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60652 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60652 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60652 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60652 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60652 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60652 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60630 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60630 (+/-0.050) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60630 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60630 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60630 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60630 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60630 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60630 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60630 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60630 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60630 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60630 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60630 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60630 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60630 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60630 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60630 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60630 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60630 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60630 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60608 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60608 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 15, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60608 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60608 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60608 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60608 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60608 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60608 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60608 (+/-0.049) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60608 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60608 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60586 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60586 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60586 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60586 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60586 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60586 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60586 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60586 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60586 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60586 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60586 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60586 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60586 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60586 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60586 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60586 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60586 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60586 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60586 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60586 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60586 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60586 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60586 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60564 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60564 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60564 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60564 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60564 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60564 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60564 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60564 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60564 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60564 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60564 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60564 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60564 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60564 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60564 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60564 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60564 (+/-0.052) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60564 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60564 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60564 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60564 (+/-0.018) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60564 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60564 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60542 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60542 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60542 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60542 (+/-0.048) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60542 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60519 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60519 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60519 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60519 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60519 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60519 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60519 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60519 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60519 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60519 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60519 (+/-0.013) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60519 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60519 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60519 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60519 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60519 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60519 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60519 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60519 (+/-0.018) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60497 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 13, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60497 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60497 (+/-0.049) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60497 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60497 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60497 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60497 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60497 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60497 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60497 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60497 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60497 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60497 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60475 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60475 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 13, 'classification__p': 1, 'classification__weights': 'distance'}
0.60475 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60475 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60475 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60475 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60475 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60475 (+/-0.052) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60475 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60475 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60475 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60475 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60475 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60475 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60475 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60475 (+/-0.048) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60475 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60475 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60475 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60475 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60475 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60475 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60453 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60453 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60453 (+/-0.018) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60453 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60453 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60453 (+/-0.053) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60453 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60453 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60453 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60431 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60431 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60431 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60431 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60431 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60431 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60431 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60431 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60431 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60431 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60431 (+/-0.014) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60408 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60408 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60408 (+/-0.051) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60408 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60408 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60408 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60408 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60408 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60408 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60408 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60408 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60408 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60408 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60408 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60386 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60386 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60386 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60386 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60386 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60386 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60386 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60386 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60386 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60386 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60386 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60386 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60386 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60386 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60386 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60386 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60386 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60386 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60386 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60364 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60364 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60364 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60364 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60364 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60364 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60364 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60364 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60364 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60364 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60364 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60364 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60342 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60342 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60342 (+/-0.017) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60342 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60342 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60342 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60342 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60342 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60342 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60342 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60342 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60342 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60342 (+/-0.048) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60342 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60342 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60342 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60342 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60342 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60320 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60320 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60320 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60320 (+/-0.053) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60320 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60320 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60320 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60320 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60320 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60320 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60320 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60320 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60320 (+/-0.054) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60320 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60320 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60320 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60297 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60297 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60297 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60297 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60297 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60297 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60297 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60297 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60297 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60297 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60297 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60297 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60297 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60297 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60297 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60297 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60297 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60275 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60275 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60275 (+/-0.052) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60275 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60275 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60275 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60275 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60275 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60275 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60275 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60275 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60253 (+/-0.049) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60253 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60253 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60253 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60253 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60253 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60253 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60253 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60253 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60253 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60253 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60253 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60253 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60253 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60253 (+/-0.015) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60253 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60253 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60253 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60253 (+/-0.048) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60253 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60253 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60231 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60231 (+/-0.055) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60231 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60231 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60231 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60231 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60231 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60231 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60231 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60231 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60231 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60231 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60231 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60231 (+/-0.018) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60231 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60231 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60231 (+/-0.052) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60209 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60209 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60209 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60209 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60209 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60209 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60209 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60209 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60209 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60209 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60209 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60209 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60209 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60209 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60209 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60209 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 11, 'classification__p': 2, 'classification__weights': 'distance'}
0.60209 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60209 (+/-0.051) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60209 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60209 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60186 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60186 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60186 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60186 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60186 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60186 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60186 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60186 (+/-0.018) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60164 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60164 (+/-0.052) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60164 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60164 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60164 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60164 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60164 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60164 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60164 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60164 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60164 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60164 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60164 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60164 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60164 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60164 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60142 (+/-0.017) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60142 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60142 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60142 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60142 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60142 (+/-0.048) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60142 (+/-0.057) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60142 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60142 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60142 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 11, 'classification__p': 1, 'classification__weights': 'distance'}
0.60142 (+/-0.018) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60142 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60120 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60120 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60120 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60120 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60120 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60120 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60120 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60120 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60098 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60098 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60098 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60098 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60098 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60098 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60098 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60098 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60098 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60098 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60098 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60075 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60075 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60075 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60075 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60075 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60075 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60075 (+/-0.056) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60075 (+/-0.047) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60053 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60053 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60053 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60053 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60053 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60053 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60053 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60053 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60053 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60053 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60053 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60053 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.60031 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60031 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60031 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60031 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60031 (+/-0.049) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60031 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60031 (+/-0.048) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60031 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60031 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60031 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60031 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60009 (+/-0.016) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60009 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60009 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60009 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60009 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.60009 (+/-0.017) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60009 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60009 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.60009 (+/-0.048) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.60009 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.60009 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60009 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60009 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.60009 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59987 (+/-0.016) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59987 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59987 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59987 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59987 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59987 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59987 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59987 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.59987 (+/-0.017) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59987 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.59964 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59964 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59964 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.59964 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59964 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59964 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59964 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59964 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59964 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59964 (+/-0.051) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59964 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.59964 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59964 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59964 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59964 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59964 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59964 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59964 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.59942 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59942 (+/-0.014) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59942 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59942 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59942 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59942 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59942 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59942 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59942 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59942 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59942 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.59942 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.59942 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59920 (+/-0.015) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59920 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59920 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59920 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59920 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59920 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59920 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59920 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59920 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59920 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59898 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59898 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59898 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.59898 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 9, 'classification__p': 2, 'classification__weights': 'distance'}
0.59898 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.59898 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59898 (+/-0.054) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59898 (+/-0.054) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59898 (+/-0.051) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59876 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59876 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59876 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59876 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59876 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59876 (+/-0.053) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59876 (+/-0.014) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59876 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59876 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59876 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59876 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59876 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59854 (+/-0.051) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59854 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59854 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59854 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.59854 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59854 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.59854 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59854 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59854 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59831 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59831 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59831 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59831 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59831 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59831 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.59831 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59831 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59831 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59831 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59831 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59809 (+/-0.050) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59809 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59809 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59809 (+/-0.038) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59809 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59809 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59809 (+/-0.054) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59809 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59809 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59809 (+/-0.014) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59787 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59787 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59787 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59787 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59787 (+/-0.015) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59787 (+/-0.051) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59787 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59765 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59765 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59765 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59765 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59765 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59765 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59765 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59743 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59743 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59743 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59743 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59743 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59743 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59743 (+/-0.055) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59743 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59743 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59720 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59720 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59720 (+/-0.048) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59720 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59698 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59698 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59698 (+/-0.049) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59698 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59698 (+/-0.013) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59698 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59698 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.59698 (+/-0.047) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59698 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59676 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59676 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59676 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59676 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59676 (+/-0.018) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59676 (+/-0.051) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59676 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59676 (+/-0.049) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59676 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59654 (+/-0.049) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59654 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59654 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59654 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59654 (+/-0.051) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59654 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59654 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59654 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59632 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59632 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59632 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.59609 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59609 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59609 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59609 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59609 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59609 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59587 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59587 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59587 (+/-0.056) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59587 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59587 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59587 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59587 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59587 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59587 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59587 (+/-0.050) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59587 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59565 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59565 (+/-0.057) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59565 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59565 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59565 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59565 (+/-0.016) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59565 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59543 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59543 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59543 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59543 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59543 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59543 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.59521 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59521 (+/-0.063) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59521 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59521 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59521 (+/-0.016) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59521 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59521 (+/-0.047) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59521 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59521 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59521 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59498 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59498 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59498 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59498 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59498 (+/-0.018) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59498 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59476 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59476 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59476 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59476 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59454 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59454 (+/-0.049) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 7, 'classification__p': 2, 'classification__weights': 'distance'}
0.59454 (+/-0.050) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59454 (+/-0.048) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59454 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59454 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59454 (+/-0.055) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59454 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59432 (+/-0.048) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59432 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59432 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59432 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59432 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59432 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59410 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59410 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59410 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59410 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59410 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59410 (+/-0.050) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59410 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59410 (+/-0.052) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59410 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59387 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59387 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59387 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59387 (+/-0.048) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59387 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59387 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59387 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59365 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59365 (+/-0.058) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59365 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59365 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59365 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.59365 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59343 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59343 (+/-0.048) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59343 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59343 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59343 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59343 (+/-0.017) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59343 (+/-0.056) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59343 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59343 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59343 (+/-0.050) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59343 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59343 (+/-0.051) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59321 (+/-0.018) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59321 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59321 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59321 (+/-0.052) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59321 (+/-0.015) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59321 (+/-0.049) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59321 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 9, 'classification__p': 1, 'classification__weights': 'distance'}
0.59321 (+/-0.047) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59299 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59299 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59299 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59299 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59299 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59299 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59299 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59299 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59277 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59277 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59277 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.59277 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59254 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.59254 (+/-0.049) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59254 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59254 (+/-0.062) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59254 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.59254 (+/-0.050) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59232 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59232 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.59232 (+/-0.017) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59232 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59210 (+/-0.049) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59210 (+/-0.049) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59210 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59210 (+/-0.050) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59210 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59210 (+/-0.018) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.59188 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59188 (+/-0.055) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59188 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59188 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59188 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59188 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.59188 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59188 (+/-0.060) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59188 (+/-0.051) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59188 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.59188 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59166 (+/-0.049) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59166 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59166 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59166 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59166 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59166 (+/-0.051) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59143 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59143 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59143 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59143 (+/-0.060) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59143 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59143 (+/-0.053) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59143 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59143 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.59121 (+/-0.052) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59121 (+/-0.052) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59121 (+/-0.056) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59121 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59121 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59121 (+/-0.047) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59121 (+/-0.055) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59121 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.59099 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59099 (+/-0.014) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59099 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59099 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59099 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59099 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59099 (+/-0.049) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59099 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59077 (+/-0.052) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59077 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59077 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59077 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59077 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59077 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59077 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59055 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59055 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59055 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59032 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.59032 (+/-0.017) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59032 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59032 (+/-0.015) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59032 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59032 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59032 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.59032 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59010 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 7, 'classification__p': 1, 'classification__weights': 'distance'}
0.59010 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.59010 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.59010 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59010 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59010 (+/-0.049) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.59010 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.59010 (+/-0.058) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.59010 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58988 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58988 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58988 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58988 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58988 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58988 (+/-0.057) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58988 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58988 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58988 (+/-0.050) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58966 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58966 (+/-0.015) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58966 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58966 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58944 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58944 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58944 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58944 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58921 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58921 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58921 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58921 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58921 (+/-0.049) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58921 (+/-0.052) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58921 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58921 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58921 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58899 (+/-0.032) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58899 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58899 (+/-0.061) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58899 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58877 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58877 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58877 (+/-0.016) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58877 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58877 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58877 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58877 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58877 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58877 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58877 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58855 (+/-0.050) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58855 (+/-0.018) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58855 (+/-0.010) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58855 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58855 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58855 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58855 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58855 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58855 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58855 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58855 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58855 (+/-0.016) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58855 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58833 (+/-0.049) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58833 (+/-0.050) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58833 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58833 (+/-0.052) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58833 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58833 (+/-0.014) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58833 (+/-0.048) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58833 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58833 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58810 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58810 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58810 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58810 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58788 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58788 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58788 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58788 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58788 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58788 (+/-0.017) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58788 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58766 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58766 (+/-0.049) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58766 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58766 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58766 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58766 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58766 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58766 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58766 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58766 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58766 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58744 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58744 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58744 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58722 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58722 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58722 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58722 (+/-0.050) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58700 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58700 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58700 (+/-0.012) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58677 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58677 (+/-0.024) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58677 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58655 (+/-0.017) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58655 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58655 (+/-0.048) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58655 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58633 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58611 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58589 (+/-0.017) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58589 (+/-0.018) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58589 (+/-0.015) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58589 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58566 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58566 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58566 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58566 (+/-0.054) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58566 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58566 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58544 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58544 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58544 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58544 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58544 (+/-0.045) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58522 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58522 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58522 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58522 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58522 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58522 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58500 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58500 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58500 (+/-0.051) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 5, 'classification__p': 2, 'classification__weights': 'distance'}
0.58500 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58500 (+/-0.053) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58500 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58478 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58478 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58478 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58478 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58478 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58478 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58478 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58478 (+/-0.052) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58455 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58455 (+/-0.014) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58455 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58455 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58455 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58433 (+/-0.063) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58433 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58433 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58433 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58433 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58433 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58433 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58433 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58433 (+/-0.016) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58433 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58433 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58433 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58433 (+/-0.049) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58411 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58411 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58411 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58389 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58389 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58389 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58389 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58389 (+/-0.059) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58389 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58389 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58367 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58367 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58367 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58367 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58367 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58367 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58367 (+/-0.048) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58344 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58344 (+/-0.051) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58344 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58344 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58344 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58344 (+/-0.014) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58344 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58344 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58322 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58322 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58322 (+/-0.050) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58322 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58322 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58322 (+/-0.020) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58300 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58300 (+/-0.061) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58300 (+/-0.013) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58300 (+/-0.049) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58300 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58300 (+/-0.051) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58278 (+/-0.050) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58278 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58278 (+/-0.051) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58278 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58278 (+/-0.060) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58278 (+/-0.032) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58278 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58256 (+/-0.013) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58256 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58256 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58256 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58256 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58233 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58233 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58233 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58233 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58233 (+/-0.060) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58233 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58233 (+/-0.016) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58233 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58233 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58211 (+/-0.033) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58211 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58211 (+/-0.053) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58211 (+/-0.052) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58211 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58211 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58211 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58211 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58211 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58211 (+/-0.057) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58211 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58211 (+/-0.049) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58189 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58189 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58189 (+/-0.048) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58189 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58189 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58189 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58167 (+/-0.046) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58167 (+/-0.055) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58167 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58167 (+/-0.051) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58167 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58145 (+/-0.050) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58145 (+/-0.048) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58145 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58145 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58145 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58145 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58145 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58145 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58145 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58123 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58123 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58123 (+/-0.048) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58123 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58123 (+/-0.035) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58123 (+/-0.046) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58123 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58123 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58123 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58100 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58100 (+/-0.051) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58100 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58100 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58100 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58100 (+/-0.056) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58100 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58100 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58100 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58100 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58100 (+/-0.021) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58100 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58100 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58078 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58078 (+/-0.051) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58078 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58078 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58078 (+/-0.053) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58078 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58078 (+/-0.040) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58078 (+/-0.052) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58078 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58078 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58078 (+/-0.056) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58078 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58056 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58056 (+/-0.057) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58056 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58056 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58056 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58056 (+/-0.050) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58056 (+/-0.051) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58056 (+/-0.043) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58056 (+/-0.055) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58056 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58056 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58034 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58034 (+/-0.029) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58034 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58034 (+/-0.025) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.58034 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58034 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58034 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58034 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58034 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58034 (+/-0.053) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58034 (+/-0.054) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58034 (+/-0.023) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58034 (+/-0.035) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58012 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 9, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58012 (+/-0.057) for {'classification__algorithm': 'auto', 'classification__leaf_size': 13, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58012 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.58012 (+/-0.051) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58012 (+/-0.040) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58012 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58012 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58012 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58012 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58012 (+/-0.051) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58012 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.58012 (+/-0.059) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58012 (+/-0.054) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.58012 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.58012 (+/-0.055) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57989 (+/-0.054) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57989 (+/-0.053) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57989 (+/-0.023) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57989 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57989 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57989 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57967 (+/-0.017) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57967 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57967 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57967 (+/-0.049) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57967 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57967 (+/-0.050) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57967 (+/-0.056) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57967 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57945 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57945 (+/-0.055) for {'classification__algorithm': 'auto', 'classification__leaf_size': 20, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57945 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57945 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57945 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57945 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57945 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57945 (+/-0.048) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57945 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57945 (+/-0.057) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57945 (+/-0.059) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57945 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57923 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57923 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57923 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57923 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57923 (+/-0.041) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57923 (+/-0.054) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57923 (+/-0.051) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57923 (+/-0.047) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57923 (+/-0.052) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57901 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57901 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57901 (+/-0.053) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57901 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57901 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57901 (+/-0.051) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57901 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57901 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.57901 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57878 (+/-0.054) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57878 (+/-0.018) for {'classification__algorithm': 'auto', 'classification__leaf_size': 5, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57878 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57878 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57878 (+/-0.057) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57878 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57878 (+/-0.055) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57878 (+/-0.049) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57878 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 5, 'classification__p': 1, 'classification__weights': 'distance'}
0.57878 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57878 (+/-0.050) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57878 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57856 (+/-0.045) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57856 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57856 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57856 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57856 (+/-0.020) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57856 (+/-0.019) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57856 (+/-0.047) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57856 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57834 (+/-0.054) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57834 (+/-0.043) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57834 (+/-0.014) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57834 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57834 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57834 (+/-0.039) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57812 (+/-0.050) for {'classification__algorithm': 'auto', 'classification__leaf_size': 10, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57812 (+/-0.042) for {'classification__algorithm': 'auto', 'classification__leaf_size': 11, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57812 (+/-0.053) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57812 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57812 (+/-0.021) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57812 (+/-0.028) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57812 (+/-0.036) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57812 (+/-0.038) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57790 (+/-0.059) for {'classification__algorithm': 'auto', 'classification__leaf_size': 22, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57790 (+/-0.036) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57790 (+/-0.022) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57790 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57790 (+/-0.044) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 17, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57790 (+/-0.030) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 27, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57790 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 3, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57790 (+/-0.051) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57790 (+/-0.054) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57790 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57767 (+/-0.051) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57767 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57745 (+/-0.041) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57745 (+/-0.056) for {'classification__algorithm': 'auto', 'classification__leaf_size': 23, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57745 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57745 (+/-0.049) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57723 (+/-0.021) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57723 (+/-0.035) for {'classification__algorithm': 'auto', 'classification__leaf_size': 3, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57723 (+/-0.049) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57723 (+/-0.032) for {'classification__algorithm': 'auto', 'classification__leaf_size': 21, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57723 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57723 (+/-0.016) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 1, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57701 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57701 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57701 (+/-0.056) for {'classification__algorithm': 'auto', 'classification__leaf_size': 15, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57701 (+/-0.051) for {'classification__algorithm': 'auto', 'classification__leaf_size': 25, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57701 (+/-0.056) for {'classification__algorithm': 'auto', 'classification__leaf_size': 28, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57701 (+/-0.052) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57701 (+/-0.064) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57701 (+/-0.022) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57701 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57701 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57701 (+/-0.041) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57701 (+/-0.050) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57701 (+/-0.024) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57701 (+/-0.042) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57679 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57679 (+/-0.027) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57679 (+/-0.048) for {'classification__algorithm': 'auto', 'classification__leaf_size': 18, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57679 (+/-0.037) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57679 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57679 (+/-0.062) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 23, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57679 (+/-0.026) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57679 (+/-0.049) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57679 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 5, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57679 (+/-0.026) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57679 (+/-0.033) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57656 (+/-0.031) for {'classification__algorithm': 'auto', 'classification__leaf_size': 4, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57656 (+/-0.017) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57656 (+/-0.052) for {'classification__algorithm': 'auto', 'classification__leaf_size': 7, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57656 (+/-0.055) for {'classification__algorithm': 'auto', 'classification__leaf_size': 17, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57656 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57656 (+/-0.029) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 8, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57656 (+/-0.042) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57656 (+/-0.052) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57656 (+/-0.049) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57634 (+/-0.052) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57634 (+/-0.047) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57634 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57634 (+/-0.034) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57634 (+/-0.029) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57634 (+/-0.066) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57612 (+/-0.037) for {'classification__algorithm': 'auto', 'classification__leaf_size': 2, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57612 (+/-0.051) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57612 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57612 (+/-0.053) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57612 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57612 (+/-0.052) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57612 (+/-0.047) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 18, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57612 (+/-0.045) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 19, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57612 (+/-0.051) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57612 (+/-0.040) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57612 (+/-0.037) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57612 (+/-0.022) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57612 (+/-0.025) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 12, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57590 (+/-0.026) for {'classification__algorithm': 'auto', 'classification__leaf_size': 14, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57590 (+/-0.034) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57590 (+/-0.019) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57590 (+/-0.036) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57568 (+/-0.051) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57568 (+/-0.027) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 16, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57568 (+/-0.039) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 24, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57568 (+/-0.050) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 26, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57545 (+/-0.048) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57545 (+/-0.030) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57545 (+/-0.053) for {'classification__algorithm': 'auto', 'classification__leaf_size': 30, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57545 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57501 (+/-0.024) for {'classification__algorithm': 'auto', 'classification__leaf_size': 8, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57501 (+/-0.043) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 2, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57501 (+/-0.046) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 11, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57501 (+/-0.059) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57501 (+/-0.059) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57501 (+/-0.050) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57479 (+/-0.044) for {'classification__algorithm': 'auto', 'classification__leaf_size': 16, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57457 (+/-0.025) for {'classification__algorithm': 'auto', 'classification__leaf_size': 12, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57457 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57457 (+/-0.054) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 10, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57457 (+/-0.051) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57457 (+/-0.055) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57435 (+/-0.053) for {'classification__algorithm': 'auto', 'classification__leaf_size': 6, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57435 (+/-0.054) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 20, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57435 (+/-0.054) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 21, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57435 (+/-0.030) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 25, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57390 (+/-0.051) for {'classification__algorithm': 'auto', 'classification__leaf_size': 19, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57390 (+/-0.039) for {'classification__algorithm': 'auto', 'classification__leaf_size': 24, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57390 (+/-0.028) for {'classification__algorithm': 'auto', 'classification__leaf_size': 29, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57390 (+/-0.033) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57390 (+/-0.034) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 13, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57390 (+/-0.023) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 28, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57346 (+/-0.047) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 6, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57324 (+/-0.051) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57279 (+/-0.055) for {'classification__algorithm': 'auto', 'classification__leaf_size': 27, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57257 (+/-0.027) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 4, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57257 (+/-0.051) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57213 (+/-0.050) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.57190 (+/-0.031) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 29, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57146 (+/-0.054) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 15, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57079 (+/-0.019) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 9, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.57079 (+/-0.028) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 14, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'uniform'}
0.57079 (+/-0.044) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57057 (+/-0.038) for {'classification__algorithm': 'auto', 'classification__leaf_size': 26, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
0.57013 (+/-0.020) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 7, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.56968 (+/-0.031) for {'classification__algorithm': 'ball_tree', 'classification__leaf_size': 30, 'classification__n_neighbors': 3, 'classification__p': 1, 'classification__weights': 'distance'}
0.56902 (+/-0.059) for {'classification__algorithm': 'kd_tree', 'classification__leaf_size': 22, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'uniform'}
0.56858 (+/-0.048) for {'classification__algorithm': 'auto', 'classification__leaf_size': 1, 'classification__n_neighbors': 3, 'classification__p': 2, 'classification__weights': 'distance'}
